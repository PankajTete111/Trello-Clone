import type { AxiosInstance } from "axios";
import type { AxiosTokenOptions } from "./types/axiosTokenOptions";
import type { TokenResponse } from "./types/tokenResponse";
declare class AxiosToken<AT extends string, RT extends string, ATEI extends string> {
    private axios;
    private options;
    private token;
    private tokenKey;
    constructor(axios: AxiosInstance, options?: AxiosTokenOptions<AT, RT, ATEI>);
    getToken(): TokenResponse<AT, RT, ATEI> | null;
    getToken<Key extends AT | RT | ATEI>(key: Key): TokenResponse<AT, RT, ATEI>[Key] | null;
    setToken(token: TokenResponse<AT, RT, ATEI>): void;
    clearToken(): void;
    refreshToken(): Promise<void>;
    private handle;
    private updateToken;
}
export declare const axiosToken: <AT extends string = "accessToken", RT extends string = "refreshToken", ATEI extends string = "accessTokenExpiresIn">(axios: AxiosInstance, options?: AxiosTokenOptions<AT, RT, ATEI>) => AxiosToken<AT, RT, ATEI>;
export { CookieAdapter } from "./utils/cookie-adapter";
